

#Lab | Aggregation Revisited - Sub queries
#Select the first name, last name, and email address of all the customers who have rented a movie.

SELECT count(r.rental_id) AS count, concat(first_name,' ',last_name) AS NAME, email FROM sakila.customer c
JOIN sakila.rental r ON c.customer_id = r.customer_id
JOIN sakila.payment p ON r.rental_id = p.rental_id
GROUP BY NAME, email
ORDER BY count;


#What is the average payment made by each customer (display the customer id, customer name (concatenated), and the average payment made).

SELECT c.customer_id, concat(first_name,' ',last_name) AS NAME, round(AVG(p.amount),1) AS AVG_Amount FROM sakila.customer c
JOIN sakila.rental r ON c.customer_id = r.customer_id
JOIN sakila.payment p ON r.rental_id = p.rental_id
GROUP BY NAME, c.customer_id
ORDER BY c.customer_id;

#Select the name and email address of all the customers who have rented the "Action" movies.
## write a querey with multiple joins
SELECT concat(first_name,' ',last_name) AS NAME, ca.name, email 
	FROM sakila.customer c
		JOIN sakila.rental r ON c.customer_id = r.customer_id
		JOIN sakila.inventory i ON i.inventory_id = r.inventory_id
		JOIN sakila.film_category fc ON fc.film_id = i.film_id
		JOIN sakila.category ca ON fc.category_id = ca.category_id
WHERE ca.category_id = 1
ORDER BY NAME;


## write a querey with multiple where clause and in condions


SELECT concat(first_name,' ',last_name) AS NAME, email
FROM customer WHERE IN  (SELECT NAME FROM sakila.category WHERE NAME = 'Action')sub1;

# Use the case statement to create a new column classifying existing columns as either or high value transactions based on the amount of payment. If the amount is between 0 and 2, label should be low and if the amount is between 2 and 4, the label should be medium, and if it is more than 4, then it should be high.


SELECT 
amount,
	CASE 
		WHEN amount < 2 THEN "LOW"
		WHEN amount BETWEEN 2 AND 4 THEN "MEDIUM"
		WHEN amount > 4 THEN "HIGH" 
		END AS Class
FROM payment;
